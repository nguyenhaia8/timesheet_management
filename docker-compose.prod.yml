version: '3.8'

services:
  # MySQL Database (Production)
  mysql:
    image: mysql:8.0
    container_name: timesheet-mysql-prod
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: timesheetdb
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d
    networks:
      - timesheet-network-prod
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Spring Boot Application (Production)
  timesheet-app:
    build: 
      context: .
      dockerfile: dockerfile
    container_name: timesheet-app-prod
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/timesheetdb?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      APP_JWT_SECRET: ${JWT_SECRET}
      APP_JWT_EXPIRATION_IN_MS: 86400000
      SERVER_PORT: 8080
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - timesheet-network-prod
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: timesheet-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - timesheet-app
    networks:
      - timesheet-network-prod
    restart: unless-stopped

volumes:
  mysql_data_prod:

networks:
  timesheet-network-prod:
    driver: bridge
